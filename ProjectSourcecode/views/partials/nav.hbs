<header>
  {{#unless hideNav}}
    <nav class="navbar navbar-expand-sm">
      <div class="container">
        <a class="navbar-brand" href="/">
          <img src="/images/UnderLEaf.png" alt="UnderLeaf Logo" class="logo">
          <span class="brand-text d-none d-sm-inline">UnderLeaf | a Mobile LaTeX editor</span>
          <span class="brand-text d-inline d-sm-none">UnderLeaf</span>
        </a>
        
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbar-collapse"
          aria-controls="navbar"
          aria-expanded="false"
          aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbar-collapse">
          <ul class="navbar-nav mx-auto">
            {{#if user}}
              <li class="nav-item">
                <a class="nav-link" href="/editor">Editor</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/notes">Notes</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/scan">Scan</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/communities">Communities</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/friends">Friends</a>
              </li>
            {{/if}}
          </ul>
          <div class="nav-item user-icon" onclick="openUserMenu(event)">
            {{#if user}}
              <span>{{firstLetter user.username}}</span>
            {{/if}}
          </div>
          <div class="nav-item">
            {{#if user}}
              <a class="nav-link auth-link" href="/logout">Logout</a>
            {{else}}
              <a class="nav-link auth-link" href="/login">Login</a>
            {{/if}}
          </div>
          
        </div>
      </div>
    </nav>
    
    <div id="userMenuModal" class="modal-content">
      <div class="modal-header">
        <p class="user-email">{{user.email}}</p>
        <span class="close" onclick="closeUserMenu()">&times;</span>
      </div>
      
      <!-- User circle and greeting -->
      <div class="modal-user-icon">
        <span>{{firstLetter user.username}}</span>
      </div>
      <h2 class="user-greeting">Hi, {{user.username}}!</h2>
      
      <!-- Change Password Section -->
      <form id="changePasswordForm">
        <label for="oldPassword">Old Password:</label>
        <input type="password" id="oldPassword" name="oldPassword" required>
        
        <label for="newPassword">New Password:</label>
        <input type="password" id="newPassword" name="newPassword" required>
        
        <label for="confirmPassword">Confirm New Password:</label>
        <input type="password" id="confirmPassword" name="confirmPassword" required>
        
        <button type="submit" class="change-password-btn">Change Password</button>
      </form>

      <!-- Bottom buttons -->
      <div class="modal-footer">
        <a class="modal-btn logout-btn" href="/logout">Logout</a>
        <a class="modal-btn forgot-btn" href="/forgot-password">Forgot Password?</a>
      </div>
    </div>
  {{/unless}}
</header>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Poppins:wght@500;600&display=swap');


  .navbar {
    background-color: #ffffff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    padding: 0.8rem 0;
    position: relative; 
    
  }

  .brand-text {
      font-weight: 600;
      color: #2c3e50;
      font-size: 1.3rem;
  }

  .nav-link {
      color: #526475;
      font-weight: 500;
      padding: 0.5rem 1rem;
      transition: all 0.3s ease;
      border-radius: 6px;
      margin: 0 0.2rem;
  }

  .nav-link:hover {
      color: #2c3e50;
      background-color: #f8f9fa;
  }

  .auth-link {
      color: #fff;
      background-color: #2c3e50;
      padding: 0.5rem 1.2rem;
      border-radius: 6px;
      transition: all 0.3s ease;
      margin-left: 5px;
  }

  .auth-link:hover {
      background-color: #34495e;
      color: #fff;
  }

  @media (max-width: 576px) {
      .navbar-nav {
          margin: 1rem 0;
      }
      
      .auth-link {
          margin-top: 0.5rem;
          text-align: center;
      }
  }
  .user-icon {
    display: inline-block;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #2c3e50;
    color: #fff;
    text-align: center;
    line-height: 40px;
    margin-left: auto; /* Push the user icon to the right */
    cursor: pointer;
    position: relative;
  }


  .logo {
    max-height: 50px; /* Set a maximum height for the logo */
    margin-right: 1rem; /* Space between logo and next element */
    position: absolute; /* Position it absolutely */
    left: 0; /* Align it to the left */
    top: 50%; /* Center it vertically */
    transform: translateY(-50%); /* Adjust for perfect vertical centering */
  }

  .user-actions {
    display: flex; /* Use flexbox for alignment */
    align-items: center; /* Center items vertically */
    margin-left: auto; /* Push this container to the right */
  }

  .modal-content {
    display: none;
    position: absolute;
    z-index: 1;
    right: 10px;
    top: 60px;
    width: 350px;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 15px; /* Reduced padding */

    flex-direction: column;
    align-items: center;
    font-family: 'Inter', sans-serif;
  }
  .modal-header {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px; /* Reduced margin */
    border-bottom: 1px solid #eee; /* Keep this border */
  }

  .close {
    cursor: pointer;
    align-self: flex-end; /* Align close button to the right */
    font-size: 20px; /* Size of the close button */
    color: #666;
    padding: 0;
  }
  .user-email {
    width: 100%;
    text-align: center;
    color: #666;
    font-size: 0.9rem;
    margin: 0;
    padding: 0;

  }
  /* Rest of your modal styling */
  .modal-content h2 {
    text-align: center; /* Center the title text */
    margin-bottom: 20px; /* Space below the title */
  }
  .modal-user-icon {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    background-color: #2c3e50;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    margin: 8px 0;
  }
  .user-greeting {
    font-size: 1.5rem;
    color: #333;
    margin: 8px 0;
    font-weight: 500;
    font-family: 'Poppins', sans-serif;
  }

  .modal-content label {
    width: 100%; /* Make labels full width */
    margin-bottom: 5px; /* Space below labels */
  }

  .modal-content input {
    width: 100%; /* Make inputs full width */
    margin-bottom: 15px; /* Space below inputs */
    padding: 10px; /* Padding for inputs */
    border: 1px solid #ccc; /* Border for inputs */
    border-radius: 4px; /* Rounded corners for inputs */
  }

  .modal-content button {
    background-color: #2c3e50; /* Match the logout button color */
    color: #fff; /* White text */
    padding: 10px 15px; /* Padding for the button */
    border: none; /* Remove border */
    border-radius: 6px; /* Rounded corners */
    cursor: pointer; /* Pointer cursor on hover */
    transition: background-color 0.3s; /* Transition for hover effect */
  }

  .modal-content button:hover {
    background-color: #34495e; /* Darker shade on hover */
  }
  #changePasswordForm {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #eee;
  }

  #changePasswordForm label {
    width: 100%;
    margin-bottom: 3px;
    color: #666;
  }

  #changePasswordForm input {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .change-password-btn {
    background-color: #2c3e50;
    color: #fff;
    padding: 8px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin: 10px 0;
  }

  .change-password-btn:hover {
    background-color: #34495e;
  }
  .modal-footer {
    width: 100%;
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
    gap: 8px;
  }

  .modal-btn {
    flex: 1;
    text-align: center;
    padding: 8px 0;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.3s;
  }

  .logout-btn {
    background-color: #2c3e50;
    color: #fff;
  }

  .logout-btn:hover {
    background-color: #34495e;
    color: #fff;
  }

  .forgot-btn {
    background-color: #f8f9fa;
    color: #2c3e50;
    border: 1px solid #2c3e50;
  }

  .forgot-btn:hover {
    background-color: #e9ecef;
  }
</style>
<script>
  document.addEventListener('click', function(event) {
    const modal = document.getElementById('userMenuModal');
    const userIcon = document.querySelector('.user-icon');
    
    // If click is outside modal and not on user icon, close modal
    if (!modal.contains(event.target) && !userIcon.contains(event.target)) {
      closeUserMenu();
    }
  });
  function openUserMenu() {
    if (event) {
      event.stopPropagation();
    }
    document.getElementById('userMenuModal').style.display = 'flex';
  }

  function closeUserMenu() {
    document.getElementById('userMenuModal').style.display = 'none';
  } 
  document.addEventListener('DOMContentLoaded', function() {
    const changePasswordForm = document.getElementById('changePasswordForm');
    if (changePasswordForm) {
      changePasswordForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const oldPassword = document.getElementById('oldPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (newPassword !== confirmPassword) {
          alert('New password and confirmation do not match.');
          return;
        }

        try {
          const response = await fetch('/change-password', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ oldPassword, newPassword }),
          });

          if (response.ok) {
            alert('Password changed successfully!');
            closeUserMenu();
          } else {
            const errorData = await response.json();
            alert(`Error: ${errorData.error}`);
          }
        } catch (error) {
          console.error('Error changing password:', error);
          alert('An error occurred while changing the password.');
        }
      });
    }
  });
</script>