    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f5f5f5;
        }
        .container {
            display: flex;
        }
        .community-list {
            flex: 3;
            display: flex;
            flex-wrap: wrap;
        }
        .card {
            margin: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 10px;
            width: 30%;
        }
        .card-title a {
        color: #8cb67d;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .card-title a:hover {
        color: #638159;
    }
        
        /* Sidebar and Toggle Styling */
        .sidebar-container {
            position: fixed;
            right: 0;
            top: 0;
            height: 100%;
            width: 250px;
            background-color: #fff;
            box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transform: translateX(100%);
            transition: transform 0.3s ease;
            z-index: 1000;
        }
        .sidebar-container.show {
            transform: translateX(0);
        }
        .toggle-sidebar-btn {
            position: fixed;
            top: 70px;
            right: 20px;
            background-color: #333;
            color: #fff;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            z-index: 1100;
        }
        .toggle-sidebar-btn.hidden {
            display: none;
        }
        
        /* Sidebar buttons */
        .sidebar button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            font-size: 1em;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .no-communities-message {
        text-align: center;
        padding: 40px;
        width: 100%;
        color: #666;
        }
        .no-communities-message p {
            margin: 10px 0;
            font-size: 1.1em;
        }
        .btn-create {
            background-color: #4CAF50;
            color: white;
        }
        .btn-join {
            background-color: #f44336;
            color: white;
        }

        /* Public Communities Box */
        .public-communities-box {
            width: 100%;
            margin: 20px 0;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #ffffff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .public-community-card {
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        .public-community-card:last-child {
            border-bottom: none;
        }
        .public-community-title {
            font-size: 1.1em;
            font-weight: bold;
        }
        .public-community-description {
            color: #666;
            margin: 5px 0;
        }
        .public-community-join {
            background-color: #8cb67d;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .public-community-join:hover {
            background-color: #638159;
        }
        /* Modal Styling */
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 2000;
        }

        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
        }

        .modal-content h2 {
            margin-bottom: 20px;
            color: #333;
        }

        .modal-content input,
        .modal-content textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

        .modal-content textarea {
            height: 100px;
            resize: vertical;
        }

        .button-group {
            display: flex;
            gap: 10px;
        }

        .btn-submit {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            flex: 1;
        }

        .btn-cancel {
            background-color: #9b2a22;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            flex: 1;
        }
        .community-controls {
            display: flex;
            gap: 15px;
            margin: 20px;
        }

        .control-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .create-btn {
            background-color: #8cb67d;
            color: white;
        }

        .create-btn:hover {
            background-color: #638159;
        }

        .join-btn {
            background-color: #8cb67d;
            color: white;
        }

        .join-btn:hover {
            background-color: #638159;
        }

        .btn-visit {
            background-color: #8cb67d;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-visit:hover {
            background-color: #638159;
        }

        .notification {
            position: fixed;
            left: 50%;
            top: 20px;
            transform: translateX(-50%);
            padding: 15px 25px;
            background-color: #4CAF50;
            color: white;
            border-radius: 5px;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
            z-index: 1000;
            min-width: 300px;
            text-align: center;
        }

        .notification.show {
            opacity: 1;
        }

        .notification.hide {
            opacity: 0;
        }

        .page-banner {
            background: linear-gradient(135deg, #8cb67d 0%, #accaa1 100%);
            padding: 40px 20px;
            color: white;
            text-align: center;
            margin-bottom: 40px;
        }

        .banner-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .banner-content h1 {
            font-size: 2.5em;
            margin-bottom: 15px;
        }

        .banner-content p {
            font-size: 1.1em;
            opacity: 0.9;
            margin-bottom: 20px;
        }

        /* Container and Grid Layouts */
        .communities-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            display: grid;
            grid-template-columns: 1fr 1fr; /* Split into two columns */
            gap: 40px;
            margin-top: 40px;
        }

        .communities-section, .join-communities-section {
            margin-bottom: 40px;
        }

        .communities-grid, .public-communities-grid {
            display: grid;
            grid-template-columns: 1fr;  /* Single column within each section */
            gap: 20px;
            margin-top: 20px;
        }

        /* Card Styles */
        .community-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            padding: 20px;
            position: relative;
            border: 1px solid #eee;
        }

        .community-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .community-card h3 {
            color: #3c5832;
            margin-bottom: 8px;
            font-size: 1.2em;
        }

        .community-card p {
            color: #666;
            margin-bottom: 15px;
            font-size: 0.95em;
            line-height: 1.5;
        }

        .community-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #eee;
        }

        .user-role {
            background-color: #e8f5e9;
            color: #2e7d32;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.85em;
            font-weight: 500;
        }

        .card-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn-visit {
            background-color: #8cb67d;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-visit:hover {
            background-color: #638159;
        }

        /* Button Styles */
        .create-btn, .join-btn {
            background-color: #8cb67d;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .create-btn:hover, .join-btn:hover {
            background-color: #638159;
        }

        /* Modal Styles */
        .modal-overlay {
            background: rgba(0, 0, 0, 0.5);
            padding: 20px;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            max-width: 600px;
            width: 90%;
        }

        .community-form {
            padding: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            padding-right: 2px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
        }

        .form-group textarea {
            height: 120px;
            resize: vertical;
        }

        .privacy-toggle {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding-right: 2px;
        }

        .privacy-toggle label {
            margin: 0;
            font-weight: 500;
            color: #333;
            order: 1;
        }

        .privacy-toggle input[type="checkbox"] {
            margin: 0;
            order: 2;
        }

        .toggle-label {
            font-weight: 500;
            color: #333;
        }

        .privacy-hint {
            font-size: 0.9em;
            color: #666;
            margin-top: 5px;
        }

        .form-actions {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        .join-community-btn {
            background-color: #8cb67d;
            color: white;
        }
    </style>
<div id="notification" class="notification"></div>
<!-- Banner Section -->
<div class="page-banner">
    <div class="banner-content">
        <h1>Communities</h1>
        <p>Join or create communities to collaborate with others</p>
        <button onclick="openCreateModal()" class="create-btn">Create New Community</button>
    </div>
</div>

<!-- Main Content -->
<div class="communities-container">
    <!-- Your Communities Section -->
    <section class="communities-section">
        <h2>Your Communities</h2>
        <div class="communities-grid">
            {{#if data.length}}
                {{#each data}}
                <div class="community-card">
                    <h3><a href="/community/{{community_id}}">{{name}}</a></h3>
                    <p>{{description}}</p>
                    <div class="community-meta">
                        <span class="user-role">
                            {{#if is_admin}}
                                Admin
                            {{else}}
                                Member
                            {{/if}}
                        </span>
                    </div>
                    <div class="card-actions">
                        <button class="btn-visit" onclick="visitCommunity('{{community_id}}')">Visit Community</button>
                    </div>
                </div>
                {{/each}}
            {{else}}
                <div class="no-communities-message">
                    <p>You haven't joined any communities yet.</p>
                    <p>Join a public community or create your own!</p>
                </div>
            {{/if}}
        </div>
    </section>

    <!-- Join Communities Section -->
    <section class="join-communities-section">
        <div class="section-header">
            <h2>Join Communities</h2>
            <button onclick="openJoinModal()" class="join-btn">Join by Code</button>
        </div>
        
        <div class="public-communities-grid">
            {{#each publicCommunities}}
            <div class="community-card">
                <h3>{{name}}</h3>
                <p>{{description}}</p>
                <div class="community-meta">
                    <span class="member-count">{{member_count}} members</span>
                </div>
                <div class="card-actions">
                    <button class="btn-visit" onclick="joinPublicCommunity('{{community_id}}')">Join Community</button>
                </div>
            </div>
            {{/each}}
        </div>
    </section>
</div>

<!-- Enhanced Create Community Modal -->
<div id="create-modal" class="modal-overlay">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Create New Community</h2>
            <button class="close-button" onclick="closeCreateModal()">&times;</button>
        </div>
        <form id="createCommunityForm" class="community-form">
            <div class="form-group">
                <label for="communityName">Community Name</label>
                <input type="text" id="communityName" placeholder="Enter community name" required>
            </div>
            
            <div class="form-group">
                <label for="communityDescription">Description</label>
                <textarea id="communityDescription" placeholder="Describe your community..." required></textarea>
            </div>

            <div class="form-group">
                <label for="privacyType">Privacy Setting</label>
                <select id="privacyType" class="form-control">
                    <option value="public">Public Community</option>
                    <option value="private">Private Community (requires access code)</option>
                </select>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-submit">Create Community</button>
                <button type="button" class="btn-cancel" onclick="closeCreateModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Toggle sidebar visibility
    function toggleSidebar() {
        const sidebar = document.getElementById("sidebar");
        const toggleButton = document.getElementById("toggleSidebarBtn");
        
        sidebar.classList.toggle("show");
        
        if (sidebar.classList.contains("show")) {
            toggleButton.classList.add("hidden");
            document.addEventListener("click", closeSidebarOnOutsideClick);
        } else {
            toggleButton.classList.remove("hidden");
            document.removeEventListener("click", closeSidebarOnOutsideClick);
        }
    }
    // listener for closing sidebar on outside click
    function closeSidebarOnOutsideClick(event) {
        const sidebar = document.getElementById("sidebar");
        const toggleButton = document.getElementById("toggleSidebarBtn");
        
        if (!sidebar.contains(event.target) && !toggleButton.contains(event.target)) {
            sidebar.classList.remove("show");
            toggleButton.classList.remove("hidden");
            document.removeEventListener("click", closeSidebarOnOutsideClick);
        }
    }

    function visitCommunity(communityId) {
        window.location.href = `/community/${communityId}`;
    }
    // hit API to join public community
    function joinPublicCommunity(communityId) {
        fetch(`/join-community/${communityId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                // Reload the page to show updated communities
                window.location.reload();
            } else {
                throw new Error('Failed to join community');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('Failed to join community. Please try again.');
        });
    }

    document.getElementById('createCommunityForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const name = document.getElementById('communityName').value;
        const description = document.getElementById('communityDescription').value;
        const isPrivate = document.getElementById('privacyType').value === 'private';

        fetch('/create-community', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, description, isPrivate })
        })
        .then(async response => {
            const data = await response.json();
            if (!response.ok) {
                throw new Error(data.error || data.details || 'Failed to create community');
            }
            return data;
        })
        .then(data => {
            if (data.accessCode) {
                showNotification(`Community created successfully! Access code: ${data.accessCode}`);
            } else {
                showNotification('Community created successfully!');
            }
            window.location.reload();
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification(error.message || 'Failed to create community');
        });
    });

    // Join Community Form Handler
    async function handleJoinSubmit(event) {
        event.preventDefault();
        const accessCode = document.getElementById('accessCode').value.trim();

        if (!accessCode) {
            showNotification('Please enter an access code');
            return;
        }

        try {
            const response = await fetch('/join-private-community', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ accessCode })
            });

            const data = await response.json();
            
            if (!response.ok) {
                throw new Error(data.error || data.details || 'Failed to join community');
            }

            showNotification(`Successfully joined ${data.communityName}!`);
            closeJoinModal();
            setTimeout(() => window.location.reload(), 1500);
        } catch (error) {
            console.error('Error:', error);
            showNotification(error.message || 'Failed to join community');
        }
    }

    function openCreateModal() {
        document.getElementById("create-modal").style.display = "flex";
    }

    function closeCreateModal() {
        document.getElementById("create-modal").style.display = "none";
    }

    function openJoinModal() {
        document.getElementById("join-modal").style.display = "flex";
    }

    function closeJoinModal() {
        document.getElementById("join-modal").style.display = "none";
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
        if (event.target.classList.contains('modal-overlay')) {
            event.target.style.display = "none";
        }
    }

    function showNotification(message, redirect = false) {
        const notification = document.getElementById('notification');
        notification.textContent = message;
        notification.classList.add('show');
        
        if (redirect) {
            setTimeout(() => {
                notification.classList.add('hide');
                setTimeout(() => {
                    notification.classList.remove('show', 'hide');
                }, 500);
            }, 1500);
        } else {
            setTimeout(() => {
                notification.classList.add('hide');
                setTimeout(() => {
                    notification.classList.remove('show', 'hide');
                }, 500);
            }, 3000);
        }
    }
</script>